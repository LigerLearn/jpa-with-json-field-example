package com.ligerlearn.example.model.entities;

import com.ligerlearn.example.model.records.Address;
import com.vladmihalcea.hibernate.type.json.JsonBinaryType;
import lombok.Data;
import org.hibernate.annotations.Type;
import org.hibernate.annotations.TypeDef;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.persistence.*;

/**
 * A simple 'Person' JPA entity which has its address as a JSONB field.
 *
 * We use the @TypeDef annotation to create an alias for the JsonBinaryType which we can
 * refer to as 'jsonb' within @Type definitions in the class.
 *
 */
@Data
@TypeDef(name = "jsonb", typeClass = JsonBinaryType.class)  // For using the Postgres JSONB type within the entity.
@Entity
public class Person {
    /* *************************************************************
     *                        Static Fields
     * *************************************************************/
    private final static long serialVersionUID = 7702L;
    private final static Logger log = LoggerFactory.getLogger(Person.class);

    /* *************************************************************
     *                       Instance Fields
     * *************************************************************/
    /**
     * The ID of the person - autogenerated by the database.
     */
    @Id @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false)
    private long id;

    /**
     * The first name of the person.
     */
    @Column(name = "first_name")
    private String firstName;

    /**
     * The surname of the person.
     */
    @Column(name = "surname")
    private String surname;

    /**
     * The address of the person as a POJO.
     *
     * We use the `@org.hibernate.annotations.Type` annotation to refer to the `jsonb`
     * type definition (that we defined above an annotation on the class itself).
     *
     * We also indicate that the columnDefinition is postgres's
     */
    @Type(type = "jsonb")
    @Column(name = "address", columnDefinition = "jsonb")
    private Address address;
}
